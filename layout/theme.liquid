<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    
	<link href="https://api.fontshare.com/css?f[]=satoshi@400,401,500,501,700,900&display=swap" rel="stylesheet">
    
    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}
	<script src="{{ 'jquery.min.js' | asset_url }}" ></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'slick.min.js' | asset_url }}" defer="defer"></script>
   
    {{ 'option_selection.js' | shopify_asset_url | script_tag }} 
    
    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      :root {
        --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};

        --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};

        --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
        --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

        --color-base-text: {{ settings.colors_text.red }}, {{ settings.colors_text.green }}, {{ settings.colors_text.blue }};
        --color-base-background-1: {{ settings.colors_background_1.red }}, {{ settings.colors_background_1.green }}, {{ settings.colors_background_1.blue }};
        --color-base-background-2: {{ settings.colors_background_2.red }}, {{ settings.colors_background_2.green }}, {{ settings.colors_background_2.blue }};
        --color-base-solid-button-labels: {{ settings.colors_solid_button_labels.red }}, {{ settings.colors_solid_button_labels.green }}, {{ settings.colors_solid_button_labels.blue }};
        --color-base-outline-button-labels: {{ settings.colors_outline_button_labels.red }}, {{ settings.colors_outline_button_labels.green }}, {{ settings.colors_outline_button_labels.blue }};
        --color-base-accent-1: {{ settings.colors_accent_1.red }}, {{ settings.colors_accent_1.green }}, {{ settings.colors_accent_1.blue }};
        --color-base-accent-2: {{ settings.colors_accent_2.red }}, {{ settings.colors_accent_2.green }}, {{ settings.colors_accent_2.blue }};
        --payment-terms-background-color: {{ settings.colors_background_1 }};

        --gradient-base-background-1: {% if settings.gradient_background_1 != blank %}{{ settings.gradient_background_1 }}{% else %}{{ settings.colors_background_1 }}{% endif %};
        --gradient-base-background-2: {% if settings.gradient_background_2 != blank %}{{ settings.gradient_background_2 }}{% else %}{{ settings.colors_background_2 }}{% endif %};
        --gradient-base-accent-1: {% if settings.gradient_accent_1 != blank %}{{ settings.gradient_accent_1 }}{% else %}{{ settings.colors_accent_1 }}{% endif %};
        --gradient-base-accent-2: {% if settings.gradient_accent_2 != blank %}{{ settings.gradient_accent_2 }}{% else %}{{ settings.colors_accent_2 }}{% endif %};

        --page-width: {{ settings.page_width | divided_by: 10 }}rem;
        --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;
      }

      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }
      {% unless  template == 'index' or template == 'list-collections' or template == 'collection' or template == 'product.main_pdp' or template == 'product' %}
	  html {
        box-sizing: border-box;
        font-size: calc(var(--font-body-scale) * 62.5%);
        height: 100%;
      }

      body {
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        grid-template-columns: 100%;
        min-height: 100%;
        margin: 0;
<!--         font-size: 1.5rem; -->
<!--         letter-spacing: 0.06rem; -->
<!--         line-height: calc(1 + 0.8 / var(--font-body-scale)); -->
        font-family: var(--font-body-family);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
      }
      @media screen and (min-width: 750px) {
        body {
          font-size: 1.6rem;
        }
      }
      {% endunless %}
      {% if template == 'index' or template == 'list-collections' or template == 'collection' or template == 'product.main_pdp' or template == 'product' %}
      html {
        box-sizing: border-box;
        height: 100%;
      }

      body {
        min-height: 100%;
        margin: 0;
      }
      {% endif %}
      
    	
    {% endstyle %}
    <style>
    	#product-form-installment{
          font-weight: 500;
          font-size: 14px !important;
          line-height: 19px !important;
          letter-spacing: -0.01em;
		  color: #4F4F4F !important;
        }
    </style>
    {% unless template == 'index' or template == 'list-collections' or template == 'collection' or template == 'product.main_pdp' or template == 'product' %}
    {{ 'base.css' | asset_url | stylesheet_tag }}
    {% endunless %}
    <link href="{{ 'slick.css' | asset_url }}" rel="stylesheet">
    <link href="{{ 'slick-theme.css' | asset_url }}" rel="stylesheet">
    <link href="{{ 'index.scss.css' | asset_url }}" rel="stylesheet">
    
   
    <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    if (Shopify.designMode) {
      document.documentElement.classList.add('shopify-design-mode');
    }
    </script>
  </head>

  <body class="{{ page_title | handle }}-page template-{{ template.name | handle }}">
    {% section 'cart-drawer' %}
    {% section 'announcement-bar' %}
    {% section 'header-new' %}
    <div class="quick-view"></div>
    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>
    {% section 'footer' %}
    {% if template == 'product.main_pdp' %}
    {% include 'sticky-cart' %}
  	
    <style>
      .fixed_header{
      	position:relative;
      }
    </style>
    {% endif %}
    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
    </ul>
	{% if template == 'product.main_pdp'  %}
        <script  type="text/javascript" defer>
          $(document).ready(function(){
            $(window).on("resize", function (e) {
                checkScreenSize();
            });

            checkScreenSize();

            function checkScreenSize(){
                var newWindowWidth = $(window).width();
                if (newWindowWidth < 991) {
                  window.onscroll = function() {scrollFunction()};
                    function scrollFunction() {
                        if (document.body.scrollTop > 1300 || document.documentElement.scrollTop > 1300) {
                            document.getElementById("sticky_cart").style.bottom = "0";
                          	document.getElementById("sticky_cart").style.top = "unset";
                          	
							
                        } else {
                            document.getElementById("sticky_cart").style.bottom = "-100%";
                          	
                        }
                    }
                }else{
                  window.onscroll = function() {scrollFunction()};
                   function scrollFunction() {
                      if (document.body.scrollTop > 1300 || document.documentElement.scrollTop > 1300) {
                          document.getElementById("sticky_cart").style.top = "0";
                          document.getElementById("sticky_cart").style.bottom = "unset";
							$('.collection_navigator').addClass('fixed_bar');
                      } else {
                          document.getElementById("sticky_cart").style.top = "-100%";
                      }
                  }
                }
            }
          });
        </script>

    {% endif %}
    {% if template == 'index'  %}
        <script>
            window.onscroll = function() {scrollFunction()};
            function scrollFunction() {
                if (document.body.scrollTop > 700 || document.documentElement.scrollTop > 700) {
                    $(".collection_navigator").addClass("fixed_bar");
                } else {
                   $(".collection_navigator").removeClass("fixed_bar");
                }
            }
        </script>
    {% endif %}
    <script>
      window.shopUrl = '{{ shop.url }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}'
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
      }

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
      }

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
      }
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    
    <script type="application/json" data-ajax-cart-initial-state >
    {{ cart | json }}
  </script>
    <script type="module">
        import { subscribeToCartAjaxRequests, cartRequestUpdate  } from '{{ "liquid-ajax-cart-v1.6.0.js" | asset_url }}'
        
            subscribeToCartAjaxRequests(( requestState, subscribeToResult ) => {    
              // This function will be called before each Shopify Cart API request
              // console.log( 'Before: ', requestState );

              subscribeToResult( requestState => {   
              	$('.prod_div_inner').slick();
             
                 $('#gift_check').change(function(){
                    if ($(this).is(':checked')) {
                      $('.btn_gift').click();
                    }else{
                      let lineValue = $('#gift-wrap_remove').find('.remove_prod a').attr('href');
                      //console.log(lineValue);
                      $('#remove_gift_dot').attr('href', lineValue);
                      setTimeout(function() {
                        $('#remove_gift_dot')[0].click();
                      }, 500);
                    }
                  });
                  
                  $('.cart_drawer .product_form').on('submit', function(e){
                    var btnForm = $(this).find('button[type="submit"]');
                    var form = $(this).serialize();
                    fetch('/cart/add.js', {
                      method: 'POST',
                      credentials: 'same-origin',
                      headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest'
                      },
                      body: form
                    })
                    .then(function(response) {
                      $(btnForm).addClass('loading_wrapper');
                      setTimeout(function() {
                          $(btnForm).removeClass('loading_wrapper');
                      }, 1500);
                    })
                  });
                
              });
            });
	</script>
    <script src="{{ 'custom.js' | asset_url }}" ></script>    
    <div class="backdrop_div" data-ajax-cart-toggle-class-button="js-my-cart-open | remove"></div>
  </body>
</html>
